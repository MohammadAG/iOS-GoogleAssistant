// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/timeofday.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GTPTimeofdayRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GTPTimeofdayRoot : GPBRootObject
@end

#pragma mark - GTPTimeOfDay

typedef GPB_ENUM(GTPTimeOfDay_FieldNumber) {
  GTPTimeOfDay_FieldNumber_Hours = 1,
  GTPTimeOfDay_FieldNumber_Minutes = 2,
  GTPTimeOfDay_FieldNumber_Seconds = 3,
  GTPTimeOfDay_FieldNumber_Nanos = 4,
};

/**
 * Represents a time of day. The date and time zone are either not significant
 * or are specified elsewhere. An API may chose to allow leap seconds. Related
 * types are [google.type.Date][google.type.Date] and `google.protobuf.Timestamp`.
 **/
@interface GTPTimeOfDay : GPBMessage

/**
 * Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
 * to allow the value "24:00:00" for scenarios like business closing time.
 **/
@property(nonatomic, readwrite) int32_t hours;

/** Minutes of hour of day. Must be from 0 to 59. */
@property(nonatomic, readwrite) int32_t minutes;

/**
 * Seconds of minutes of the time. Must normally be from 0 to 59. An API may
 * allow the value 60 if it allows leap-seconds.
 **/
@property(nonatomic, readwrite) int32_t seconds;

/** Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999. */
@property(nonatomic, readwrite) int32_t nanos;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
