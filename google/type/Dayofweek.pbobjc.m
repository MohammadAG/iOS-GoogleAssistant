// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/dayofweek.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "google/type/Dayofweek.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - GTPDayofweekRoot

@implementation GTPDayofweekRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - Enum GTPDayOfWeek

GPBEnumDescriptor *GTPDayOfWeek_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "DayOfWeekUnspecified\000Monday\000Tuesday\000Wedn"
        "esday\000Thursday\000Friday\000Saturday\000Sunday\000";
    static const int32_t values[] = {
        GTPDayOfWeek_DayOfWeekUnspecified,
        GTPDayOfWeek_Monday,
        GTPDayOfWeek_Tuesday,
        GTPDayOfWeek_Wednesday,
        GTPDayOfWeek_Thursday,
        GTPDayOfWeek_Friday,
        GTPDayOfWeek_Saturday,
        GTPDayOfWeek_Sunday,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(GTPDayOfWeek)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:GTPDayOfWeek_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL GTPDayOfWeek_IsValidValue(int32_t value__) {
  switch (value__) {
    case GTPDayOfWeek_DayOfWeekUnspecified:
    case GTPDayOfWeek_Monday:
    case GTPDayOfWeek_Tuesday:
    case GTPDayOfWeek_Wednesday:
    case GTPDayOfWeek_Thursday:
    case GTPDayOfWeek_Friday:
    case GTPDayOfWeek_Saturday:
    case GTPDayOfWeek_Sunday:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
