// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/context.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GAPIContextRule;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GAPIContextRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GAPIContextRoot : GPBRootObject
@end

#pragma mark - GAPIContext

typedef GPB_ENUM(GAPIContext_FieldNumber) {
  GAPIContext_FieldNumber_RulesArray = 1,
};

/**
 * `Context` defines which contexts an API requests.
 *
 * Example:
 *
 *     context:
 *       rules:
 *       - selector: "*"
 *         requested:
 *         - google.rpc.context.ProjectContext
 *         - google.rpc.context.OriginContext
 *
 * The above specifies that all methods in the API request
 * `google.rpc.context.ProjectContext` and
 * `google.rpc.context.OriginContext`.
 *
 * Available context types are defined in package
 * `google.rpc.context`.
 **/
@interface GAPIContext : GPBMessage

/**
 * A list of RPC context rules that apply to individual API methods.
 *
 * **NOTE:** All service configuration rules follow "last one wins" order.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GAPIContextRule*> *rulesArray;
/** The number of items in @c rulesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rulesArray_Count;

@end

#pragma mark - GAPIContextRule

typedef GPB_ENUM(GAPIContextRule_FieldNumber) {
  GAPIContextRule_FieldNumber_Selector = 1,
  GAPIContextRule_FieldNumber_RequestedArray = 2,
  GAPIContextRule_FieldNumber_ProvidedArray = 3,
};

/**
 * A context rule provides information about the context for an individual API
 * element.
 **/
@interface GAPIContextRule : GPBMessage

/**
 * Selects the methods to which this rule applies.
 *
 * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *selector;

/** A list of full type names of requested contexts. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *requestedArray;
/** The number of items in @c requestedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger requestedArray_Count;

/** A list of full type names of provided contexts. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *providedArray;
/** The number of items in @c providedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger providedArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
