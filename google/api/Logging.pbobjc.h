// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/logging.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GAPILogging_LoggingDestination;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GAPILoggingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GAPILoggingRoot : GPBRootObject
@end

#pragma mark - GAPILogging

typedef GPB_ENUM(GAPILogging_FieldNumber) {
  GAPILogging_FieldNumber_ProducerDestinationsArray = 1,
  GAPILogging_FieldNumber_ConsumerDestinationsArray = 2,
};

/**
 * Logging configuration of the service.
 *
 * The following example shows how to configure logs to be sent to the
 * producer and consumer projects. In the example, the `activity_history`
 * log is sent to both the producer and consumer projects, whereas the
 * `purchase_history` log is only sent to the producer project.
 *
 *     monitored_resources:
 *     - type: library.googleapis.com/branch
 *       labels:
 *       - key: /city
 *         description: The city where the library branch is located in.
 *       - key: /name
 *         description: The name of the branch.
 *     logs:
 *     - name: activity_history
 *       labels:
 *       - key: /customer_id
 *     - name: purchase_history
 *     logging:
 *       producer_destinations:
 *       - monitored_resource: library.googleapis.com/branch
 *         logs:
 *         - activity_history
 *         - purchase_history
 *       consumer_destinations:
 *       - monitored_resource: library.googleapis.com/branch
 *         logs:
 *         - activity_history
 **/
@interface GAPILogging : GPBMessage

/**
 * Logging configurations for sending logs to the producer project.
 * There can be multiple producer destinations, each one must have a
 * different monitored resource type. A log can be used in at most
 * one producer destination.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GAPILogging_LoggingDestination*> *producerDestinationsArray;
/** The number of items in @c producerDestinationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger producerDestinationsArray_Count;

/**
 * Logging configurations for sending logs to the consumer project.
 * There can be multiple consumer destinations, each one must have a
 * different monitored resource type. A log can be used in at most
 * one consumer destination.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GAPILogging_LoggingDestination*> *consumerDestinationsArray;
/** The number of items in @c consumerDestinationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger consumerDestinationsArray_Count;

@end

#pragma mark - GAPILogging_LoggingDestination

typedef GPB_ENUM(GAPILogging_LoggingDestination_FieldNumber) {
  GAPILogging_LoggingDestination_FieldNumber_LogsArray = 1,
  GAPILogging_LoggingDestination_FieldNumber_MonitoredResource = 3,
};

/**
 * Configuration of a specific logging destination (the producer project
 * or the consumer project).
 **/
@interface GAPILogging_LoggingDestination : GPBMessage

/**
 * The monitored resource type. The type must be defined in the
 * [Service.monitored_resources][google.api.Service.monitored_resources] section.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *monitoredResource;

/**
 * Names of the logs to be sent to this destination. Each name must
 * be defined in the [Service.logs][google.api.Service.logs] section. If the log name is
 * not a domain scoped name, it will be automatically prefixed with
 * the service name followed by "/".
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *logsArray;
/** The number of items in @c logsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
