// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/auth.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GAPIAuthProvider;
@class GAPIAuthRequirement;
@class GAPIAuthenticationRule;
@class GAPIOAuthRequirements;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GAPIAuthRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GAPIAuthRoot : GPBRootObject
@end

#pragma mark - GAPIAuthentication

typedef GPB_ENUM(GAPIAuthentication_FieldNumber) {
  GAPIAuthentication_FieldNumber_RulesArray = 3,
  GAPIAuthentication_FieldNumber_ProvidersArray = 4,
};

/**
 * `Authentication` defines the authentication configuration for an API.
 *
 * Example for an API targeted for external use:
 *
 *     name: calendar.googleapis.com
 *     authentication:
 *       providers:
 *       - id: google_calendar_auth
 *         jwks_uri: https://www.googleapis.com/oauth2/v1/certs
 *         issuer: https://securetoken.google.com
 *       rules:
 *       - selector: "*"
 *         requirements:
 *           provider_id: google_calendar_auth
 **/
@interface GAPIAuthentication : GPBMessage

/**
 * A list of authentication rules that apply to individual API methods.
 *
 * **NOTE:** All service configuration rules follow "last one wins" order.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GAPIAuthenticationRule*> *rulesArray;
/** The number of items in @c rulesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rulesArray_Count;

/** Defines a set of authentication providers that a service supports. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GAPIAuthProvider*> *providersArray;
/** The number of items in @c providersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger providersArray_Count;

@end

#pragma mark - GAPIAuthenticationRule

typedef GPB_ENUM(GAPIAuthenticationRule_FieldNumber) {
  GAPIAuthenticationRule_FieldNumber_Selector = 1,
  GAPIAuthenticationRule_FieldNumber_Oauth = 2,
  GAPIAuthenticationRule_FieldNumber_AllowWithoutCredential = 5,
  GAPIAuthenticationRule_FieldNumber_RequirementsArray = 7,
};

/**
 * Authentication rules for the service.
 *
 * By default, if a method has any authentication requirements, every request
 * must include a valid credential matching one of the requirements.
 * It's an error to include more than one kind of credential in a single
 * request.
 *
 * If a method doesn't have any auth requirements, request credentials will be
 * ignored.
 **/
@interface GAPIAuthenticationRule : GPBMessage

/**
 * Selects the methods to which this rule applies.
 *
 * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *selector;

/** The requirements for OAuth credentials. */
@property(nonatomic, readwrite, strong, null_resettable) GAPIOAuthRequirements *oauth;
/** Test to see if @c oauth has been set. */
@property(nonatomic, readwrite) BOOL hasOauth;

/**
 * Whether to allow requests without a credential. The credential can be
 * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
 *
 * For requests without credentials, if the service control environment is
 * specified, each incoming request **must** be associated with a service
 * consumer. This can be done by passing an API key that belongs to a consumer
 * project.
 **/
@property(nonatomic, readwrite) BOOL allowWithoutCredential;

/** Requirements for additional authentication providers. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GAPIAuthRequirement*> *requirementsArray;
/** The number of items in @c requirementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger requirementsArray_Count;

@end

#pragma mark - GAPIAuthProvider

typedef GPB_ENUM(GAPIAuthProvider_FieldNumber) {
  GAPIAuthProvider_FieldNumber_Id_p = 1,
  GAPIAuthProvider_FieldNumber_Issuer = 2,
  GAPIAuthProvider_FieldNumber_JwksUri = 3,
  GAPIAuthProvider_FieldNumber_Audiences = 4,
};

/**
 * Configuration for an anthentication provider, including support for
 * [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
 **/
@interface GAPIAuthProvider : GPBMessage

/**
 * The unique identifier of the auth provider. It will be referred to by
 * `AuthRequirement.provider_id`.
 *
 * Example: "bookstore_auth".
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/**
 * Identifies the principal that issued the JWT. See
 * https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1
 * Usually a URL or an email address.
 *
 * Example: https://securetoken.google.com
 * Example: 1234567-compute\@developer.gserviceaccount.com
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *issuer;

/**
 * URL of the provider's public key set to validate signature of the JWT. See
 * [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
 * Optional if the key set document:
 *  - can be retrieved from
 *    [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html
 *    of the issuer.
 *  - can be inferred from the email domain of the issuer (e.g. a Google service account).
 *
 * Example: https://www.googleapis.com/oauth2/v1/certs
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *jwksUri;

/**
 * The list of JWT
 * [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
 * that are allowed to access. A JWT containing any of these audiences will
 * be accepted. When this setting is absent, only JWTs with audience
 * "https://[Service_name][google.api.Service.name]/[API_name][google.protobuf.Api.name]"
 * will be accepted. For example, if no audiences are in the setting,
 * LibraryService API will only accept JWTs with the following audience
 * "https://library-example.googleapis.com/google.example.library.v1.LibraryService".
 *
 * Example:
 *
 *     audiences: bookstore_android.apps.googleusercontent.com,
 *                bookstore_web.apps.googleusercontent.com
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *audiences;

@end

#pragma mark - GAPIOAuthRequirements

typedef GPB_ENUM(GAPIOAuthRequirements_FieldNumber) {
  GAPIOAuthRequirements_FieldNumber_CanonicalScopes = 1,
};

/**
 * OAuth scopes are a way to define data and permissions on data. For example,
 * there are scopes defined for "Read-only access to Google Calendar" and
 * "Access to Cloud Platform". Users can consent to a scope for an application,
 * giving it permission to access that data on their behalf.
 *
 * OAuth scope specifications should be fairly coarse grained; a user will need
 * to see and understand the text description of what your scope means.
 *
 * In most cases: use one or at most two OAuth scopes for an entire family of
 * products. If your product has multiple APIs, you should probably be sharing
 * the OAuth scope across all of those APIs.
 *
 * When you need finer grained OAuth consent screens: talk with your product
 * management about how developers will use them in practice.
 *
 * Please note that even though each of the canonical scopes is enough for a
 * request to be accepted and passed to the backend, a request can still fail
 * due to the backend requiring additional scopes or permissions.
 **/
@interface GAPIOAuthRequirements : GPBMessage

/**
 * The list of publicly documented OAuth scopes that are allowed access. An
 * OAuth token containing any of these scopes will be accepted.
 *
 * Example:
 *
 *      canonical_scopes: https://www.googleapis.com/auth/calendar,
 *                        https://www.googleapis.com/auth/calendar.read
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *canonicalScopes;

@end

#pragma mark - GAPIAuthRequirement

typedef GPB_ENUM(GAPIAuthRequirement_FieldNumber) {
  GAPIAuthRequirement_FieldNumber_ProviderId = 1,
  GAPIAuthRequirement_FieldNumber_Audiences = 2,
};

/**
 * User-defined authentication requirements, including support for
 * [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
 **/
@interface GAPIAuthRequirement : GPBMessage

/**
 * [id][google.api.AuthProvider.id] from authentication provider.
 *
 * Example:
 *
 *     provider_id: bookstore_auth
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *providerId;

/**
 * NOTE: This will be deprecated soon, once AuthProvider.audiences is
 * implemented and accepted in all the runtime components.
 *
 * The list of JWT
 * [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
 * that are allowed to access. A JWT containing any of these audiences will
 * be accepted. When this setting is absent, only JWTs with audience
 * "https://[Service_name][google.api.Service.name]/[API_name][google.protobuf.Api.name]"
 * will be accepted. For example, if no audiences are in the setting,
 * LibraryService API will only accept JWTs with the following audience
 * "https://library-example.googleapis.com/google.example.library.v1.LibraryService".
 *
 * Example:
 *
 *     audiences: bookstore_android.apps.googleusercontent.com,
 *                bookstore_web.apps.googleusercontent.com
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *audiences;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
